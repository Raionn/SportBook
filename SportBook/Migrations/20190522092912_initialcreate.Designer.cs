// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SportBook.Models;

namespace SportBook.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20190522092912_initialcreate")]
    partial class initialcreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SportBook.Models.Event", b =>
                {
                    b.Property<int>("EventId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AuthorUserId");

                    b.Property<string>("CreationTime");

                    b.Property<string>("EventName");

                    b.Property<bool>("HasStarted");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("StartTime");

                    b.Property<string>("State");

                    b.Property<string>("Type");

                    b.HasKey("EventId");

                    b.HasIndex("AuthorUserId");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("SportBook.Models.Message", b =>
                {
                    b.Property<int>("MessageId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EventId");

                    b.Property<string>("Text");

                    b.HasKey("MessageId");

                    b.HasIndex("EventId");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("SportBook.Models.Team", b =>
                {
                    b.Property<int>("TeamId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TeamName");

                    b.Property<int>("Type");

                    b.HasKey("TeamId");

                    b.ToTable("Teams");
                });

            modelBuilder.Entity("SportBook.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("EventId");

                    b.Property<string>("Game_account");

                    b.Property<string>("Nickname");

                    b.Property<string>("Password");

                    b.Property<string>("Username");

                    b.HasKey("UserId");

                    b.HasIndex("EventId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("SportBook.Models.Event", b =>
                {
                    b.HasOne("SportBook.Models.User", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorUserId");
                });

            modelBuilder.Entity("SportBook.Models.Message", b =>
                {
                    b.HasOne("SportBook.Models.Event")
                        .WithMany("Messages")
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SportBook.Models.User", b =>
                {
                    b.HasOne("SportBook.Models.Event")
                        .WithMany("ParticipantList")
                        .HasForeignKey("EventId");
                });
#pragma warning restore 612, 618
        }
    }
}
